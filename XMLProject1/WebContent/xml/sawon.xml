<?xml version="1.0" encoding="UTF-8"?>
<!-- xml은 무조건 첫번째줄에 써야한다 -->
<!--
	1) XML(필요한 데이트를 문서로 저장) : Document, HTML(View)
		=>문서형 데이터 베이스, 조인과 쿼리가 가능하다
		=> 운영체제의 호환성이 좋다
		=> 모든 프로그램 언어에서 같은 내용을 출력할 수 있다.
		=> XML
			# XML구조 (xml코드)
			# 문서 제작하는 방법 (DTD, XSD)
			# 변환(XSLT) : html,pdf
			# 언어에(자바)서 활용 : DOM,SAX(*****): XML Parser
							===한번에 읽어서 메모리에 저장한상태에서 파싱을 해준다
								==== 한줄씩 읽어서 데이터를 가지고 온다(속도상으로는 sax가 빠르다->메모리에 저장할 필요가 없기 때문)
			
		1. 구분이 되어 있다(반정형화 데이터-> 필요한것 필요하지않는 데이터를 저장)(정형화 데이터: 원하는걸,필요로하는것을 저장하는 데이터)
		-> 문서구조(보여주는 테이블이 아니다). 문서를 저장했다가 문서를 활용하는 곳
			XML : 필요한 데이터 저장시에  <a>()</a>, <a href="()"> 
								        ㄴ>데이터가 저장되는 위치\
				  태그사이, 속성
			ML : 태그와 속성으로 만들어 진다
				 태그 : 여는태그<a> 닫는 태그</a>,
				 	 Empth태그 <input /> : 뒤에 태그가 없다=> 단독태그-> 혼자 수행하고 혼자 닫는 태그
		2. XML : 태그는 지정된 것이 없다(사용자 정의) => 시멘텍으로 제작(우리가 만드는것)
										  =====태그를 만드는 순간 알아볼 수 있는 태그로 만들어야 한다
										  <div>보다는 <header>
				1)XML 문법
					= 태그를 만들 경우에는 
						# 알파벳,한글을 사용한다(알파벳은 대소문자를 구분한다)
							 HTML : <A>=<a>는 같다
							 XML : <A>!=<a>는 같지 않다
							 JAVA : int A; int a;
						# 숫자를 사용할 수 있다 :  단 앞에 사용 금지
							<2aaa>=>에러코드, <a2> <a3>=> 가능
						# 특수문자 사용이 가능하다 : (_), (-), ., $, :
							<c:forEach> <file_name> <file.size>
						# 키워드는 (예약어)는 사용할 수 없다 =>
						# 반드시 최상의 태그는 1개만 존재
							=계층구조 : 젠체 루트 태그
							=열고 닫는 태그가 반드시 일치되어야 한다(순서도 일치되어야 한다)
								<a><b><c></c></b></a>
						# 속성은 값을 지정할 때 반드시 "" oder ''를 사용해야 한다
							<table width=300> (X)
							<table width="300"> (O) 반드시""를 써야 에러가 나지 ㅇ낳는다
						
-->

<sawon><!-- 최상위태그 -> 테이블명 -->
	<list> <!-- Row(Record) -->
		<sabun>1</sabun><!-- column -->
		<name>홍길동</name>
		<debt>개발부</debt>
		<sex>남자</sex>
		<age>26</age>
	</list>
	<list>
		<sabun>2</sabun>
		<name>심청이</name>
		<debt>개발부</debt>
		<sex>여자</sex>
		<age>26</age>
	</list>
	<list>
		<sabun>3</sabun>
		<name>박문수</name>
		<debt>개발부</debt>
		<sex>남자</sex>
		<age>26</age>
	</list>
</sawon>